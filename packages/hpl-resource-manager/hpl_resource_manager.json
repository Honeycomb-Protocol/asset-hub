{
  "version": "0.0.1-beta.1",
  "name": "hpl_resource_manager",
  "instructions": [
    {
      "name": "createResource",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "resource",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "CreateResourceArgs"
          }
        }
      ]
    },
    {
      "name": "initilizeResourceTree",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "resource",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL TOKEN PROGRAM"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitilizeResourceTreeArgs"
          }
        }
      ]
    },
    {
      "name": "mintResource",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "resource",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "MintResourceArgs"
          }
        }
      ]
    },
    {
      "name": "burnResource",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "resource",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "owner",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "BurnResourceArgs"
          }
        }
      ]
    },
    {
      "name": "craftRecipe",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "user",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "outputResource",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "inputResourceOne",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "inputResourceTwo",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "inputResourceThree",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "inputResourceFour",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "vec": {
              "defined": "CraftRecipeArg"
            }
          }
        }
      ]
    },
    {
      "name": "initilizeRecipe",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "key",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "recipe",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "outputResource",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "inputResourceOne",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "inputResourceTwo",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "inputResourceThree",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "inputResourceFour",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "InitilizeRecipeArgs"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Recipe",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "project",
            "type": "publicKey"
          },
          {
            "name": "key",
            "type": "publicKey"
          },
          {
            "name": "xp",
            "type": {
              "defined": "XpPair"
            }
          },
          {
            "name": "output",
            "type": {
              "defined": "ResourceAmountPair"
            }
          },
          {
            "name": "inputs",
            "type": {
              "vec": {
                "defined": "ResourceAmountPair"
              }
            }
          },
          {
            "name": "outputCharacteristics",
            "type": {
              "hashMap": [
                "string",
                "string"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Resource",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "docs": [
              "Bump seed for the PDA"
            ],
            "type": "u8"
          },
          {
            "name": "project",
            "docs": [
              "The project this resouce is associated with"
            ],
            "type": "publicKey"
          },
          {
            "name": "mint",
            "docs": [
              "The mint of this resource"
            ],
            "type": "publicKey"
          },
          {
            "name": "merkleTrees",
            "docs": [
              "token account trees"
            ],
            "type": {
              "defined": "ControlledMerkleTrees"
            }
          },
          {
            "name": "kind",
            "type": {
              "defined": "ResourceKind"
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "CraftRecipeArg",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "holdingState",
            "type": {
              "option": {
                "defined": "HoldingAccountArgs"
              }
            }
          },
          {
            "name": "proofSize",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "InitilizeRecipeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "xp",
            "type": {
              "defined": "XpPair"
            }
          },
          {
            "name": "amounts",
            "type": {
              "vec": "u64"
            }
          },
          {
            "name": "outputCharacteristics",
            "type": {
              "hashMap": [
                "string",
                "string"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "CreateResourceArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "kind",
            "type": {
              "defined": "ResourceKind"
            }
          },
          {
            "name": "metadata",
            "type": {
              "defined": "ResourceMetadataArgs"
            }
          }
        ]
      }
    },
    {
      "name": "InitilizeResourceTreeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "maxDepth",
            "type": "u32"
          },
          {
            "name": "maxBufferSize",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "HoldingAccountArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "holding",
            "type": {
              "defined": "Holding"
            }
          },
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "leafIdx",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "ResourceAmountPair",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "resource",
            "type": "publicKey"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "XpPair",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "label",
            "type": "string"
          },
          {
            "name": "increament",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ResourceMetadataArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "symbol",
            "type": "string"
          },
          {
            "name": "uri",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "ResourceMetadataUpdateArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "name",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "symbol",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "uri",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "additionalMetadata",
            "type": {
              "hashMap": [
                "string",
                "string"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "MintResourceArgs",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "option": {
                    "defined": "HoldingAccountArgs"
                  }
                }
              },
              {
                "name": "amount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "option": {
                    "defined": "HoldingAccountArgs"
                  }
                }
              },
              {
                "name": "characteristics",
                "type": {
                  "hashMap": [
                    "string",
                    "string"
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "BurnResourceArgs",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              },
              {
                "name": "amount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "UnWrapResourceArgs",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              },
              {
                "name": "amount",
                "type": "u64"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              },
              {
                "name": "metadata",
                "type": {
                  "defined": "ResourceMetadataArgs"
                }
              },
              {
                "name": "characteristics",
                "type": {
                  "hashMap": [
                    "string",
                    "string"
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "WrapResourceArgs",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "amount",
                "type": "u64"
              },
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holdingState",
                "type": {
                  "defined": "HoldingAccountArgs"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Holding",
      "docs": [
        "Resource holding state"
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "holder",
                "type": "publicKey"
              },
              {
                "name": "balance",
                "type": "u64"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holder",
                "type": {
                  "defined": "NonFungibleHolder"
                }
              },
              {
                "name": "characteristics",
                "type": {
                  "hashMap": [
                    "string",
                    "string"
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "NonFungibleHolder",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Holder",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "Eject",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "holder",
                "type": "publicKey"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "ResourceKind",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "decimals",
                "type": "u8"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "characteristics",
                "type": {
                  "vec": "string"
                }
              },
              {
                "name": "supply",
                "type": "u32"
              }
            ]
          },
          {
            "name": "NonFungible"
          }
        ]
      }
    },
    {
      "name": "ExtensionInitializationParams",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "MintCloseAuthority",
            "fields": [
              {
                "name": "closeAuthority",
                "type": {
                  "option": "publicKey"
                }
              }
            ]
          },
          {
            "name": "PermanentDelegate",
            "fields": [
              {
                "name": "delegate",
                "type": "publicKey"
              }
            ]
          },
          {
            "name": "MetadataPointer",
            "fields": [
              {
                "name": "authority",
                "type": {
                  "option": "publicKey"
                }
              },
              {
                "name": "metadataAddress",
                "type": {
                  "option": "publicKey"
                }
              }
            ]
          },
          {
            "name": "GroupPointer",
            "fields": [
              {
                "name": "authority",
                "type": {
                  "option": "publicKey"
                }
              },
              {
                "name": "groupAddress",
                "type": {
                  "option": "publicKey"
                }
              }
            ]
          },
          {
            "name": "GroupMemberPointer",
            "fields": [
              {
                "name": "authority",
                "type": {
                  "option": "publicKey"
                }
              },
              {
                "name": "memberAddress",
                "type": {
                  "option": "publicKey"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "Schema",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Null"
          },
          {
            "name": "Bool"
          },
          {
            "name": "Number"
          },
          {
            "name": "String"
          },
          {
            "name": "Array",
            "fields": [
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "Object",
            "fields": [
              {
                "hashMap": [
                  "string",
                  {
                    "defined": "Schema"
                  }
                ]
              }
            ]
          },
          {
            "name": "Pubkey"
          },
          {
            "name": "Option",
            "fields": [
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "HashMap",
            "fields": [
              {
                "defined": "Schema"
              },
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "vec": {
                  "tuple": [
                    "string",
                    {
                      "defined": "Schema"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "ControlledMerkleTrees",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "active",
            "type": "u8"
          },
          {
            "name": "schema",
            "type": {
              "defined": "Schema"
            }
          },
          {
            "name": "merkleTrees",
            "type": {
              "vec": "publicKey"
            }
          }
        ]
      }
    },
    {
      "name": "Holding",
      "docs": [
        "Resource holding state"
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Fungible",
            "fields": [
              {
                "name": "holder",
                "type": "publicKey"
              },
              {
                "name": "balance",
                "type": "u64"
              }
            ]
          },
          {
            "name": "INF",
            "fields": [
              {
                "name": "holder",
                "type": {
                  "defined": "NonFungibleHolder"
                }
              },
              {
                "name": "characteristics",
                "type": {
                  "hashMap": [
                    "string",
                    "string"
                  ]
                }
              }
            ]
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "ResourceNotInitialized",
      "msg": "The resource is not initialized"
    },
    {
      "code": 6001,
      "name": "ResourceNotFound",
      "msg": "The resource provided is not found"
    },
    {
      "code": 6002,
      "name": "InsufficientAmount",
      "msg": "The amount provided is insufficient"
    },
    {
      "code": 6003,
      "name": "CharacteristicsMismatch",
      "msg": "The characteristics provided do not match the recipe"
    },
    {
      "code": 6004,
      "name": "InvalidHoldingState",
      "msg": "The holding state provided is invalid"
    }
  ],
  "metadata": {
    "address": "Assetw8uxLogzVXic5P8wGYpVdesS1oZHfSnBFHAu42s",
    "origin": "anchor",
    "binaryVersion": "0.29.0",
    "libVersion": "0.29.0"
  }
}