{
  "version": "0.0.2-beta.1",
  "name": "hpl_character_manager",
  "instructions": [
    {
      "name": "newCharacterModel",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "key",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "hplEvents",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Events Program"
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "NewCharacterModelArgs"
          }
        }
      ]
    },
    {
      "name": "createNewCharactersTree",
      "accounts": [
        {
          "name": "project",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The project account."
          ]
        },
        {
          "name": "characterModel",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The (delegate) authority of the project."
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "The system program."
          ]
        },
        {
          "name": "hplEvents",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Events Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SOLANA SYSVAR CLOCK"
          ]
        },
        {
          "name": "rentSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE RENT SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTURCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "CreateNewCharactersTreeArgs"
          }
        }
      ]
    },
    {
      "name": "depositNft",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "nftMint",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Mint address of the NFT"
          ]
        },
        {
          "name": "nftAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Token account of the NFT"
          ]
        },
        {
          "name": "nftMetadata",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "NFT token metadata"
          ]
        },
        {
          "name": "nftEdition",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "NFT edition"
          ]
        },
        {
          "name": "nftTokenRecord",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "NFT token record"
          ]
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE TOKEN PROGRAM"
          ]
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "ASSOCIATED TOKEN PROGRAM"
          ]
        },
        {
          "name": "tokenMetadataProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "METAPLEX TOKEN METADATA PROGRAM"
          ]
        },
        {
          "name": "authorizationRulesProgram",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "authorizationRules",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": []
    },
    {
      "name": "withdrawNft",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "nftMint",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Mint address of the NFT"
          ]
        },
        {
          "name": "nftAccount",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Token account of the NFT"
          ]
        },
        {
          "name": "nftMetadata",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "NFT token metadata"
          ]
        },
        {
          "name": "nftEdition",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "NFT edition"
          ]
        },
        {
          "name": "nftTokenRecord",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "NFT token record"
          ]
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE TOKEN PROGRAM"
          ]
        },
        {
          "name": "associatedTokenProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "ASSOCIATED TOKEN PROGRAM"
          ]
        },
        {
          "name": "tokenMetadataProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "METAPLEX TOKEN METADATA PROGRAM"
          ]
        },
        {
          "name": "authorizationRulesProgram",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "authorizationRules",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": []
    },
    {
      "name": "depositCnft",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "assetId",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "treeAuthority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "bubblegum",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "MPL Bubblegum program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "DepositCnftArgs"
          }
        }
      ]
    },
    {
      "name": "withdrawCnft",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "treeAuthority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "bubblegum",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "MPL Bubblegum program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "WithdrawCnftArgs"
          }
        }
      ]
    },
    {
      "name": "wrapCharacter",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": []
    },
    {
      "name": "unwrapCharacter",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "assetCustody",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "wallet",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UnwrapCharacterArgs"
          }
        }
      ]
    },
    {
      "name": "useCharacter",
      "accounts": [
        {
          "name": "project",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "characterModel",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "merkleTree",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "user",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The service that's using the character"
          ]
        },
        {
          "name": "owner",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The wallet that pays for the rent"
          ]
        },
        {
          "name": "vault",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "HPL Fee collection vault"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE SYSTEM PROGRAM"
          ]
        },
        {
          "name": "hiveControl",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "HPL Hive Control Program"
          ]
        },
        {
          "name": "compressionProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL account compression program."
          ]
        },
        {
          "name": "logWrapper",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SPL Noop program."
          ]
        },
        {
          "name": "clock",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE CLOCK SYSVAR"
          ]
        },
        {
          "name": "instructionsSysvar",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NATIVE INSTRUCTIONS SYSVAR"
          ]
        }
      ],
      "args": [
        {
          "name": "args",
          "type": {
            "defined": "UseCharacterArgs"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "CharacterModel",
      "docs": [
        "Game character (particulary NFT) PDA Account",
        "",
        "PDA: `'character', project, key`",
        "",
        "Category: nft_state"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "key",
            "docs": [
              "The project this character is associated with"
            ],
            "type": "publicKey"
          },
          {
            "name": "project",
            "docs": [
              "The project this character is associated with"
            ],
            "type": "publicKey"
          },
          {
            "name": "config",
            "docs": [
              "Where this character came from"
            ],
            "type": {
              "defined": "CharacterConfig"
            }
          },
          {
            "name": "attributes",
            "docs": [
              "Character specific attributes"
            ],
            "type": {
              "defined": "Schema"
            }
          },
          {
            "name": "merkleTrees",
            "docs": [
              "Character merkle trees"
            ],
            "type": {
              "defined": "ControlledMerkleTrees"
            }
          }
        ]
      }
    },
    {
      "name": "AssetCustody",
      "docs": [
        "Game character (particulary NFT) PDA Account",
        "PDA: ['character', mint]",
        "Category: nft_state"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "wallet",
            "docs": [
              "Where this character came from"
            ],
            "type": "publicKey"
          },
          {
            "name": "characterModel",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "source",
            "type": {
              "option": {
                "defined": "CharacterSource"
              }
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "UseCharacterArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "leafIdx",
            "type": "u32"
          },
          {
            "name": "sourceHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "currentUsedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          },
          {
            "name": "newUsedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          }
        ]
      }
    },
    {
      "name": "DepositCnftArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "dataHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "creatorHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "index",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "WithdrawCnftArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "dataHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "creatorHash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "index",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "NewCharacterModelArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "config",
            "type": {
              "defined": "CharacterConfig"
            }
          },
          {
            "name": "attributes",
            "type": {
              "defined": "Schema"
            }
          }
        ]
      }
    },
    {
      "name": "CreateNewCharactersTreeArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "maxDepth",
            "type": "u32"
          },
          {
            "name": "maxBufferSize",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "UnwrapCharacterArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "leafIdx",
            "type": "u32"
          },
          {
            "name": "source",
            "type": {
              "defined": "CharacterSource"
            }
          },
          {
            "name": "usedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          }
        ]
      }
    },
    {
      "name": "Event",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "CharacterModel",
            "fields": [
              {
                "name": "address",
                "type": "publicKey"
              },
              {
                "name": "state",
                "type": "bytes"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterConfig",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Wrapped",
            "fields": [
              {
                "vec": {
                  "defined": "NftWrapCriteria"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterSource",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Wrapped",
            "fields": [
              {
                "name": "mint",
                "type": "publicKey"
              },
              {
                "name": "criteria",
                "type": {
                  "defined": "NftWrapCriteria"
                }
              },
              {
                "name": "isCompressed",
                "type": "bool"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "NftWrapCriteria",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Collection",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "Creator",
            "fields": [
              "publicKey"
            ]
          },
          {
            "name": "MerkleTree",
            "fields": [
              "publicKey"
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterUsedBy",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "None"
          },
          {
            "name": "Staking",
            "fields": [
              {
                "name": "pool",
                "type": "publicKey"
              },
              {
                "name": "staker",
                "type": "publicKey"
              },
              {
                "name": "stakedAt",
                "type": "i64"
              },
              {
                "name": "claimedAt",
                "type": "i64"
              }
            ]
          },
          {
            "name": "Missions",
            "fields": [
              {
                "name": "participation",
                "type": "publicKey"
              }
            ]
          },
          {
            "name": "Guild",
            "fields": [
              {
                "name": "id",
                "type": "publicKey"
              },
              {
                "name": "role",
                "type": {
                  "defined": "GuildRole"
                }
              },
              {
                "name": "order",
                "type": "u8"
              }
            ]
          }
        ]
      }
    },
    {
      "name": "GuildRole",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Chief"
          },
          {
            "name": "Member"
          }
        ]
      }
    },
    {
      "name": "ControlledMerkleTrees",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "active",
            "type": "u8"
          },
          {
            "name": "schema",
            "type": {
              "defined": "Schema"
            }
          },
          {
            "name": "merkleTrees",
            "type": {
              "vec": "publicKey"
            }
          }
        ]
      }
    },
    {
      "name": "Schema",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Null"
          },
          {
            "name": "Bool"
          },
          {
            "name": "Number"
          },
          {
            "name": "String"
          },
          {
            "name": "Array",
            "fields": [
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "Object",
            "fields": [
              {
                "hashMap": [
                  "string",
                  {
                    "defined": "Schema"
                  }
                ]
              }
            ]
          },
          {
            "name": "Pubkey"
          },
          {
            "name": "Option",
            "fields": [
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "HashMap",
            "fields": [
              {
                "defined": "Schema"
              },
              {
                "defined": "Schema"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "vec": {
                  "tuple": [
                    "string",
                    {
                      "defined": "Schema"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "name": "CharacterSchema",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "publicKey"
          },
          {
            "name": "source",
            "type": {
              "defined": "CharacterSource"
            }
          },
          {
            "name": "usedBy",
            "type": {
              "defined": "CharacterUsedBy"
            }
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidMetadata",
      "msg": "Metadata provided for mint is invalid"
    },
    {
      "code": 6001,
      "name": "NoCriteriaMatched",
      "msg": "Provided metadata didn't match any criteria config for the character model"
    },
    {
      "code": 6002,
      "name": "AssetIDMismatch",
      "msg": "Asset ID provided in context does not match the generated one"
    },
    {
      "code": 6003,
      "name": "CustodialAssetSourceNotFound",
      "msg": "Source not found for the provided asset custody"
    },
    {
      "code": 6004,
      "name": "CharacterInUse",
      "msg": "Character is currently being used by another service"
    },
    {
      "code": 6005,
      "name": "UsedByMismatch",
      "msg": "Cannot change used_by type"
    },
    {
      "code": 6006,
      "name": "MerkleTreeInvalid",
      "msg": "Merkle tree provided does not belong to this model"
    }
  ],
  "metadata": {
    "address": "ChRCtrG7X5kb9YncA4wuyD68DXXL8Szt3zBCCGiioBTg",
    "origin": "anchor",
    "binaryVersion": "0.29.0",
    "libVersion": "unknown"
  }
}