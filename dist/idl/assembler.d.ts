export type Assembler = {
    "version": "0.1.0";
    "name": "assembler";
    "instructions": [
        {
            "name": "createAssembler";
            "accounts": [
                {
                    "name": "collectionMint";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "Collection of the nfts generated by this assembler"
                    ];
                },
                {
                    "name": "collectionMetadataAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Metadata account of the collection"
                    ];
                },
                {
                    "name": "assembler";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSVAR RENT"
                    ];
                }
            ];
            "args": [
                {
                    "name": "args";
                    "type": {
                        "defined": "CreateAssemblerArgs";
                    };
                }
            ];
        },
        {
            "name": "createAssemblerCollectionMasterEdition";
            "accounts": [
                {
                    "name": "collectionMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Collection of the nfts generated by this assembler"
                    ];
                },
                {
                    "name": "collectionMetadataAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Metadata account of the collection"
                    ];
                },
                {
                    "name": "collectionMasterEdition";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Master Edition account of the collection"
                    ];
                },
                {
                    "name": "collectionTokenAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Collection token account"
                    ];
                },
                {
                    "name": "assembler";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": true;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSVAR RENT"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "createBlock";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "block";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Block account"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": true;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                }
            ];
            "args": [
                {
                    "name": "args";
                    "type": {
                        "defined": "CreateBlockArgs";
                    };
                }
            ];
        },
        {
            "name": "createBlockDefinition";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "block";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Block account"
                    ];
                },
                {
                    "name": "blockDefinition";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Block Definition account"
                    ];
                },
                {
                    "name": "blockDefinitionMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Mint of the SFT/Collection"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": true;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                }
            ];
            "args": [
                {
                    "name": "args";
                    "type": {
                        "defined": "BlockDefinitionValue";
                    };
                }
            ];
        },
        {
            "name": "createNft";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "collectionMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "The collection mint of the assembler"
                    ];
                },
                {
                    "name": "collectionMetadataAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Metadata account of the collection"
                    ];
                },
                {
                    "name": "collectionMasterEdition";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Master Edition account of the collection"
                    ];
                },
                {
                    "name": "nftMint";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "NFT mint account"
                    ];
                },
                {
                    "name": "nftMetadata";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Metadata account of the NFT"
                    ];
                },
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT account"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "The wallet that holds the pre mint authority over this NFT"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSVAR RENT"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "addBlock";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT account"
                    ];
                },
                {
                    "name": "block";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Block account"
                    ];
                },
                {
                    "name": "blockDefinition";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Block definition account"
                    ];
                },
                {
                    "name": "tokenMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Attribute token mint"
                    ];
                },
                {
                    "name": "tokenAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Attribute token account"
                    ];
                },
                {
                    "name": "tokenMetadata";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Attribute token metadata"
                    ];
                },
                {
                    "name": "tokenEdition";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Attribute token edition"
                    ];
                },
                {
                    "name": "depositAccount";
                    "isMut": true;
                    "isSigner": false;
                    "isOptional": true;
                    "docs": [
                        "The account that will hold the nft sent on expedition"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that has pre mint authority over this NFT"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSVAR RENT"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "mintNft";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT account"
                    ];
                },
                {
                    "name": "nftMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT mint account"
                    ];
                },
                {
                    "name": "nftMetadata";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Metadata account of the NFT"
                    ];
                },
                {
                    "name": "nftMasterEdition";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Master Edition account of the NFT"
                    ];
                },
                {
                    "name": "tokenAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT token account"
                    ];
                },
                {
                    "name": "uniqueConstraint";
                    "isMut": true;
                    "isSigner": false;
                    "isOptional": true;
                    "docs": [
                        "NFT unique constraint"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that has pre mint authority over this NFT"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "NATIVE SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSVAR RENT"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "burnNft";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT account"
                    ];
                },
                {
                    "name": "nftMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT mint account"
                    ];
                },
                {
                    "name": "tokenAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT token account"
                    ];
                },
                {
                    "name": "uniqueConstraint";
                    "isMut": true;
                    "isSigner": false;
                    "isOptional": true;
                    "docs": [
                        "NFT unique constraint"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": true;
                    "docs": [
                        "The wallet that holds the pre mint authority over this NFT"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "removeBlock";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "NFT account"
                    ];
                },
                {
                    "name": "block";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Block account"
                    ];
                },
                {
                    "name": "blockDefinition";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Block definition account"
                    ];
                },
                {
                    "name": "tokenMint";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Burning token mint"
                    ];
                },
                {
                    "name": "tokenAccount";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Burning token account"
                    ];
                },
                {
                    "name": "tokenMetadata";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Burning token metadata"
                    ];
                },
                {
                    "name": "tokenEdition";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "Burning token edition"
                    ];
                },
                {
                    "name": "depositAccount";
                    "isMut": true;
                    "isSigner": false;
                    "isOptional": true;
                    "docs": [
                        "The account that will hold the nft sent on expedition"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that has pre mint authority over this NFT"
                    ];
                },
                {
                    "name": "tokenProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SPL TOKEN PROGRAM"
                    ];
                },
                {
                    "name": "tokenMetadataProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "METAPLEX TOKEN METADATA PROGRAM"
                    ];
                },
                {
                    "name": "systemProgram";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "SYSTEM PROGRAM"
                    ];
                },
                {
                    "name": "rent";
                    "isMut": false;
                    "isSigner": false;
                    "docs": [
                        "RENT PROGRAM"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "setNftGenerated";
            "accounts": [
                {
                    "name": "nft";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "The nft account"
                    ];
                }
            ];
            "args": [];
        },
        {
            "name": "updateAssembler";
            "accounts": [
                {
                    "name": "assembler";
                    "isMut": true;
                    "isSigner": false;
                    "docs": [
                        "Assembler state account"
                    ];
                },
                {
                    "name": "authority";
                    "isMut": false;
                    "isSigner": true;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "newAuthority";
                    "isMut": false;
                    "isSigner": false;
                    "isOptional": true;
                    "docs": [
                        "The wallet that holds the authority over the assembler"
                    ];
                },
                {
                    "name": "payer";
                    "isMut": true;
                    "isSigner": true;
                    "docs": [
                        "The wallet that pays for the rent"
                    ];
                }
            ];
            "args": [
                {
                    "name": "args";
                    "type": {
                        "defined": "UpdateAssemblerArgs";
                    };
                }
            ];
        }
    ];
    "accounts": [
        {
            "name": "assembler";
            "docs": [
                "Assembler state account"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "bump";
                        "type": "u8";
                    },
                    {
                        "name": "authority";
                        "docs": [
                            "The wallet that has authority to modify the assembler"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "collection";
                        "docs": [
                            "The collection address of the assembler generated NFTs"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "collectionName";
                        "docs": [
                            "The collection name to be associated with each nft"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "collectionSymbol";
                        "docs": [
                            "The collection symbol to be associated with each nft"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "collectionDescription";
                        "docs": [
                            "The collection description to be associated with each nft"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "nftBaseUri";
                        "docs": [
                            "The base uri of each nft metadata"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "assemblingAction";
                        "docs": [
                            "Action to take for the block SFT while assembling"
                        ];
                        "type": {
                            "defined": "AssemblingAction";
                        };
                    },
                    {
                        "name": "nfts";
                        "docs": [
                            "The number of NFTs created by this assembler"
                        ];
                        "type": "u16";
                    },
                    {
                        "name": "allowDuplicates";
                        "docs": [
                            "Should this assembler allow duplicate NFTs"
                        ];
                        "type": "bool";
                    }
                ];
            };
        },
        {
            "name": "block";
            "docs": [
                "Block account"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "bump";
                        "type": "u8";
                    },
                    {
                        "name": "assembler";
                        "docs": [
                            "The assembler this block is associated to"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "blockOrder";
                        "docs": [
                            "The order of the block in layers"
                        ];
                        "type": "u8";
                    },
                    {
                        "name": "isGraphical";
                        "docs": [
                            "Is there a image for this block"
                        ];
                        "type": "bool";
                    },
                    {
                        "name": "blockType";
                        "docs": [
                            "The type of the block/trait_type"
                        ];
                        "type": {
                            "defined": "BlockType";
                        };
                    },
                    {
                        "name": "blockName";
                        "docs": [
                            "The name of the block"
                        ];
                        "type": "string";
                    }
                ];
            };
        },
        {
            "name": "blockDefinition";
            "docs": [
                "Block Definition Account"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "bump";
                        "type": "u8";
                    },
                    {
                        "name": "block";
                        "docs": [
                            "The block this definition is associated to"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "mint";
                        "docs": [
                            "The mint address of the block definition"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "value";
                        "docs": [
                            "The value of the block definition"
                        ];
                        "type": {
                            "defined": "BlockDefinitionValue";
                        };
                    }
                ];
            };
        },
        {
            "name": "nft";
            "docs": [
                "NFT state account"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "bump";
                        "type": "u8";
                    },
                    {
                        "name": "assembler";
                        "docs": [
                            "The assembler this NFT is associated to"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "authority";
                        "docs": [
                            "The wallet that has pre mint authority over this NFT"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "collectionAddress";
                        "docs": [
                            "The collection address of this NFT"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "mint";
                        "docs": [
                            "The mint address of this NFT"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "name";
                        "docs": [
                            "The name of the NFT"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "symbol";
                        "docs": [
                            "The symbol of the NFT"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "description";
                        "docs": [
                            "The description of the NFT"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "minted";
                        "docs": [
                            "Flag if this NFT is minted"
                        ];
                        "type": "bool";
                    },
                    {
                        "name": "id";
                        "docs": [
                            "The id of the NFT"
                        ];
                        "type": "u16";
                    },
                    {
                        "name": "uri";
                        "docs": [
                            "The uri of the NFT"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "isGenerated";
                        "docs": [
                            "Flag if the image for this nft is already generated"
                        ];
                        "type": "bool";
                    },
                    {
                        "name": "attributes";
                        "docs": [
                            "NFT Attributes"
                        ];
                        "type": {
                            "vec": {
                                "defined": "NFTAttribute";
                            };
                        };
                    }
                ];
            };
        },
        {
            "name": "nftUniqueConstraint";
            "docs": [
                "NFT Unique Constraint account"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "bump";
                        "type": "u8";
                    },
                    {
                        "name": "nft";
                        "docs": [
                            "The NFT this constraint is associated to"
                        ];
                        "type": "publicKey";
                    }
                ];
            };
        }
    ];
    "types": [
        {
            "name": "CreateAssemblerArgs";
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "assemblingAction";
                        "type": {
                            "defined": "AssemblingAction";
                        };
                    },
                    {
                        "name": "collectionName";
                        "type": "string";
                    },
                    {
                        "name": "collectionSymbol";
                        "type": "string";
                    },
                    {
                        "name": "collectionUri";
                        "type": "string";
                    },
                    {
                        "name": "collectionDescription";
                        "type": "string";
                    },
                    {
                        "name": "nftBaseUri";
                        "type": "string";
                    },
                    {
                        "name": "allowDuplicates";
                        "type": {
                            "option": "bool";
                        };
                    }
                ];
            };
        },
        {
            "name": "UpdateAssemblerArgs";
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "assemblingAction";
                        "type": {
                            "defined": "AssemblingAction";
                        };
                    },
                    {
                        "name": "nftBaseUri";
                        "type": "string";
                    },
                    {
                        "name": "allowDuplicates";
                        "type": {
                            "option": "bool";
                        };
                    }
                ];
            };
        },
        {
            "name": "CreateBlockArgs";
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "blockOrder";
                        "type": "u8";
                    },
                    {
                        "name": "isGraphical";
                        "type": "bool";
                    },
                    {
                        "name": "blockType";
                        "type": {
                            "defined": "BlockType";
                        };
                    },
                    {
                        "name": "blockName";
                        "type": "string";
                    }
                ];
            };
        },
        {
            "name": "NFTAttribute";
            "docs": [
                "NFT Attribute"
            ];
            "type": {
                "kind": "struct";
                "fields": [
                    {
                        "name": "block";
                        "docs": [
                            "The block account"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "blockDefinition";
                        "docs": [
                            "The block definition"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "mint";
                        "docs": [
                            "The token mint associated with this attribute"
                        ];
                        "type": "publicKey";
                    },
                    {
                        "name": "order";
                        "docs": [
                            "The order this attribute is to be place on"
                        ];
                        "type": "u8";
                    },
                    {
                        "name": "attributeName";
                        "docs": [
                            "Attribute name"
                        ];
                        "type": "string";
                    },
                    {
                        "name": "attributeValue";
                        "docs": [
                            "Attribute value"
                        ];
                        "type": {
                            "defined": "NFTAttributeValue";
                        };
                    }
                ];
            };
        },
        {
            "name": "AssemblingAction";
            "docs": [
                "Assembling Action"
            ];
            "type": {
                "kind": "enum";
                "variants": [
                    {
                        "name": "Burn";
                    },
                    {
                        "name": "Freeze";
                    },
                    {
                        "name": "TakeCustody";
                    }
                ];
            };
        },
        {
            "name": "BlockType";
            "docs": [
                "Block types"
            ];
            "type": {
                "kind": "enum";
                "variants": [
                    {
                        "name": "Enum";
                    },
                    {
                        "name": "Boolean";
                    },
                    {
                        "name": "Random";
                    },
                    {
                        "name": "Computed";
                    }
                ];
            };
        },
        {
            "name": "BlockDefinitionValue";
            "docs": [
                "Block Definition Value"
            ];
            "type": {
                "kind": "enum";
                "variants": [
                    {
                        "name": "Enum";
                        "fields": [
                            {
                                "name": "is_collection";
                                "type": "bool";
                            },
                            {
                                "name": "value";
                                "type": "string";
                            },
                            {
                                "name": "image";
                                "type": {
                                    "option": "string";
                                };
                            }
                        ];
                    },
                    {
                        "name": "Boolean";
                        "fields": [
                            {
                                "name": "value";
                                "type": "bool";
                            }
                        ];
                    },
                    {
                        "name": "Number";
                        "fields": [
                            {
                                "name": "min";
                                "type": "u64";
                            },
                            {
                                "name": "max";
                                "type": "u64";
                            }
                        ];
                    }
                ];
            };
        },
        {
            "name": "NFTAttributeValue";
            "docs": [
                "NFT Attribute Value"
            ];
            "type": {
                "kind": "enum";
                "variants": [
                    {
                        "name": "String";
                        "fields": [
                            {
                                "name": "value";
                                "type": "string";
                            }
                        ];
                    },
                    {
                        "name": "Boolean";
                        "fields": [
                            {
                                "name": "value";
                                "type": "bool";
                            }
                        ];
                    },
                    {
                        "name": "Number";
                        "fields": [
                            {
                                "name": "value";
                                "type": "u64";
                            }
                        ];
                    }
                ];
            };
        }
    ];
    "errors": [
        {
            "code": 6000;
            "name": "Overflow";
            "msg": "Opertaion overflowed";
        },
        {
            "code": 6001;
            "name": "BlockTypeMismatch";
            "msg": "The type of block is not same as the block definition value provided";
        },
        {
            "code": 6002;
            "name": "RequiredBlockImage";
            "msg": "The particular block requires an image in definition";
        },
        {
            "code": 6003;
            "name": "InvalidBlockType";
            "msg": "The block has an invalid type";
        },
        {
            "code": 6004;
            "name": "InvalidBlockDefinition";
            "msg": "The block defintion is invalid";
        },
        {
            "code": 6005;
            "name": "InvalidMetadata";
            "msg": "The metadata provided for the mint is not valid";
        },
        {
            "code": 6006;
            "name": "InvalidTokenForBlockDefinition";
            "msg": "The token is not valid for this block definition";
        },
        {
            "code": 6007;
            "name": "NFTAlreadyMinted";
            "msg": "The NFT is already minted";
        },
        {
            "code": 6008;
            "name": "BlockExistsForNFT";
            "msg": "NFT attribute is already present for this block";
        },
        {
            "code": 6009;
            "name": "BlockDoesNotExistsForNFT";
            "msg": "NFT does not have attribute for this block";
        },
        {
            "code": 6010;
            "name": "InvalidUniqueConstraint";
            "msg": "Unique constraint is not valid";
        },
        {
            "code": 6011;
            "name": "UniqueConstraintNotProvided";
            "msg": "Unique constraint is not provided";
        },
        {
            "code": 6012;
            "name": "DepositAccountNotProvided";
            "msg": "Deposit account is not provided";
        },
        {
            "code": 6013;
            "name": "NFTNotMinted";
            "msg": "The NFT is not minted";
        },
        {
            "code": 6014;
            "name": "NFTNotBurnable";
            "msg": "The NFT is cannot be burned";
        }
    ];
};
export declare const IDL: Assembler;
